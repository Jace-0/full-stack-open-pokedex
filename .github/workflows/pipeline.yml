name: Deployment pipeline

on:
  push:
    branches:
      - main

  pull_request:
    branches: [main]
    types: [opened, synchronize]
env:
  # This checks if any commit message contains #skip
  DEPLOY_CONDITION: ${{ !contains(join(github.event.commits.*.message, ' '), '#skip') }}
jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-20.04
    # Only run deployment if we're on main branch and no #skip tag is present
    if: ${{ 
      github.event_name == 'push' && 
      github.ref == 'refs/heads/main' && 
      !contains(join(github.event.commits.*.message, ' '), '#skip')}}
      
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Check style
        run: npm run eslint

      - name: Build
        run: npm run build

      - name: Run unit tests
        run: npm run test

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium

      - name: Run E2E tests
        env:
          CI: true
        run: |
          npm run start-prod &
          npx wait-on http://localhost:5000
          npm run test:e2e

      - name: Deploy to Render
        if: ${{ github.event_name == 'push' && success() }}
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}
          
  tag_release:
    needs: [simple_deployment_pipeline]  # This makes it wait for the first job
    runs-on: ubuntu-20.04
    # Use the same condition for version tagging
    if: ${{ 
      github.event_name == 'push' && 
      github.ref == 'refs/heads/main' && 
      !contains(join(github.event.commits.*.message, ' '), '#skip')}}  # Only run on pushes to main
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'  # This ensures we get all git history for versioning
      
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@f278d49d30cdd8775cc3e7dd00b5ee11686ee297
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch    # Makes patch the default increment
          WITH_V: false         # Versions will look like 1.2.3 instead of v1.2.3

   
  Build_Notification:
    needs: [simple_deployment_pipeline, tag_release]
    runs-on: ubuntu-latest
    if: always()
  
    steps:
      - name: Notify Success
        if: ${{ success() && github.event_name == 'push' && github.ref == 'refs/heads/main' }} # Runs only if the previous steps succeed
        uses: rjstone/discord-webhook-notify@1.0.4
        with:
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
          severity: info
          description: |
            üéâ Build Success! 
            Branch: ${{ github.ref_name }}
            Commit: ${{ github.sha }}
          username: "GitHub Actions"
  
      - name: Notify Failure
        if: ${{ failure() && github.event_name == 'push' && github.ref == 'refs/heads/main' }} # Runs only if the previous steps fail
        uses: rjstone/discord-webhook-notify@1.0.4
        with:
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
          severity: error
          description: |
            ‚ùå Build Failed!
            Commit: ${{ github.sha }}
            Author: ${{ github.actor }}
          details: "View run for details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          username: "GitHub"
